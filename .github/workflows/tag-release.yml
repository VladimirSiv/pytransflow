name: Tag and Release
on:
  pull_request:
    types:
      - closed
jobs:
  tag-release:
    runs-on: ubuntu-latest
    # if: startsWith(github.event.pull_request.title, 'Release:')
    permissions:
      contents: write
    steps:
      - name: Get Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Load Cached Poetry Installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
            path: ~/.local
            key: poetry-0
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Set up Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Version
        id: version
        run: echo "version=$(poetry version | cut -d ' ' -f2)" >> $GITHUB_OUTPUT
      - name: Tag
        run: |
          git tag -a "v${{ steps.version.outputs.version }}" -m "Version ${{ steps.version.outputs.version }}"
          git push --follow-tags
      - name: Release Notes
        id: release_note
        run: |
          current_tag=$(git describe --tags --abbrev=0)
          previous_tag=$(git tag --sort=-creatordate | grep -A 1 $current_tag | tail -n 1)
          git diff -U0 $(git rev-list -n 1 $previous_tag) $(git rev-list -n 1 $current_tag) CHANGELOG.md | grep '^[+-]' | grep -Ev '^(--- a/|\+\+\+ b/)' | sed "s/+//g" | tail -n +3 > release_notes.md
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false
